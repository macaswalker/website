{"ast":null,"code":"const post = {\n  id: \"openFOI\",\n  title: \"OpenFOI: Freedom of Information Made Easy\",\n  publication: \"Portfolio, 2025\",\n  date: \"2025-05-28\",\n  summary: \"An AI-powered platform for managing Freedom of Information requests.\",\n  content: `\n  ## Overview\n  \n  Freedom of Information (FOI) requests are essential for public accountability, yet managing them is often inefficient and time-consuming. OpenFOI is a lightweight, AI-powered platform designed to streamline the FOI lifecycle ‚Äî from drafting and redacting to exporting and tracking ‚Äî helping journalists, civil society groups, and government bodies reduce overhead and improve transparency.\n  \n  ## Features\n  \n  - üîç AI-assisted draft generation for FOI responses\n  - ‚úÇÔ∏è Smart redaction using named entity recognition (NER)\n  - üìÑ One-click export to PDF and CSV formats\n  - üìä Analytics dashboard for tracking request timelines and response rates\n  - üß† GPT-powered suggestions for common replies and red flag detection\n  \n  ## Demo\n  \n  Below is a demo of the OpenFOI system in action:\n  \n  <video controls width=\"100%\">\n    <source src=\"/videos/OpenFOI.mp4\" type=\"video/mp4\" />\n    Your browser does not support the video tag.\n  </video>\n  \n  ## Implementation Details\n  \n  - **Frontend:** Built with **React**, the UI is responsive and optimized for desktop workflows. TailwindCSS was used for styling and layout.\n  - **Backend:** Implemented in **FastAPI**, providing clean REST endpoints for draft generation, redaction, and file export.\n  - **AI Integration:** The system uses **GPT-4** via OpenAI's API to generate drafts and flag sensitive content. Custom prompts were developed to guide output tone and structure.\n  - **Redaction Engine:** Named Entity Recognition (NER) is powered by spaCy to automatically detect personal or sensitive entities.\n  - **Data Layer:** FOI requests and user data are stored in a **PostgreSQL** database.\n  - **Media Handling:** Demo videos and large assets are versioned using **Git LFS** for scalability.\n  \n  ## Technologies Used\n  \n  - React\n  - FastAPI\n  - OpenAI (GPT-4)\n  - PostgreSQL\n  - spaCy (NER)\n  - Git LFS\n  - TailwindCSS\n  \n  ## Reflections\n  \n  OpenFOI was developed to explore how AI can reduce the administrative burden associated with public sector transparency. Building it deepened my understanding of language models in sensitive domains, full-stack system design, and user workflows in civic tech. It‚Äôs a compelling use case for AI in service of democratic accountability.\n  `\n};\nexport default post;","map":{"version":3,"names":["post","id","title","publication","date","summary","content"],"sources":["/Users/mac/Documents/Career/Website/src/data/portfolio/openFOI.js"],"sourcesContent":["const post = {\n    id: \"openFOI\",\n    title: \"OpenFOI: Freedom of Information Made Easy\",\n    publication: \"Portfolio, 2025\",\n    date: \"2025-05-28\",\n    summary: \"An AI-powered platform for managing Freedom of Information requests.\",\n    content: `\n  ## Overview\n  \n  Freedom of Information (FOI) requests are essential for public accountability, yet managing them is often inefficient and time-consuming. OpenFOI is a lightweight, AI-powered platform designed to streamline the FOI lifecycle ‚Äî from drafting and redacting to exporting and tracking ‚Äî helping journalists, civil society groups, and government bodies reduce overhead and improve transparency.\n  \n  ## Features\n  \n  - üîç AI-assisted draft generation for FOI responses\n  - ‚úÇÔ∏è Smart redaction using named entity recognition (NER)\n  - üìÑ One-click export to PDF and CSV formats\n  - üìä Analytics dashboard for tracking request timelines and response rates\n  - üß† GPT-powered suggestions for common replies and red flag detection\n  \n  ## Demo\n  \n  Below is a demo of the OpenFOI system in action:\n  \n  <video controls width=\"100%\">\n    <source src=\"/videos/OpenFOI.mp4\" type=\"video/mp4\" />\n    Your browser does not support the video tag.\n  </video>\n  \n  ## Implementation Details\n  \n  - **Frontend:** Built with **React**, the UI is responsive and optimized for desktop workflows. TailwindCSS was used for styling and layout.\n  - **Backend:** Implemented in **FastAPI**, providing clean REST endpoints for draft generation, redaction, and file export.\n  - **AI Integration:** The system uses **GPT-4** via OpenAI's API to generate drafts and flag sensitive content. Custom prompts were developed to guide output tone and structure.\n  - **Redaction Engine:** Named Entity Recognition (NER) is powered by spaCy to automatically detect personal or sensitive entities.\n  - **Data Layer:** FOI requests and user data are stored in a **PostgreSQL** database.\n  - **Media Handling:** Demo videos and large assets are versioned using **Git LFS** for scalability.\n  \n  ## Technologies Used\n  \n  - React\n  - FastAPI\n  - OpenAI (GPT-4)\n  - PostgreSQL\n  - spaCy (NER)\n  - Git LFS\n  - TailwindCSS\n  \n  ## Reflections\n  \n  OpenFOI was developed to explore how AI can reduce the administrative burden associated with public sector transparency. Building it deepened my understanding of language models in sensitive domains, full-stack system design, and user workflows in civic tech. It‚Äôs a compelling use case for AI in service of democratic accountability.\n  `\n  };\n  \n  export default post;\n  "],"mappings":"AAAA,MAAMA,IAAI,GAAG;EACTC,EAAE,EAAE,SAAS;EACbC,KAAK,EAAE,2CAA2C;EAClDC,WAAW,EAAE,iBAAiB;EAC9BC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE,sEAAsE;EAC/EC,OAAO,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,CAAC;AAED,eAAeN,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}