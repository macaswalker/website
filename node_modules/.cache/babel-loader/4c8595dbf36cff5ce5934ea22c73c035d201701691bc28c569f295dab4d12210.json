{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Career/Website/src/components/blog/LiveCode.js\",\n  _s = $RefreshSig$();\n// src/components/blog/LiveCode.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveCode = _ref => {\n  _s();\n  let {\n    initialCode\n  } = _ref;\n  const [code, setCode] = useState(initialCode || '// Write your code here');\n  const [output, setOutput] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const outputEndRef = useRef(null);\n\n  // Scroll to bottom of output whenever new content is added\n  useEffect(() => {\n    if (outputEndRef.current) {\n      outputEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [output]);\n\n  // Override console.log to capture output\n  const runCode = () => {\n    setIsRunning(true);\n    setOutput([]);\n\n    // Save the original console methods\n    const originalLog = console.log;\n    const originalWarn = console.warn;\n    const originalError = console.error;\n\n    // Override console methods to capture output\n    const logs = [];\n    console.log = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      originalLog(...args);\n      logs.push({\n        type: 'log',\n        content: args.map(arg => formatOutput(arg)).join(' ')\n      });\n    };\n    console.warn = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      originalWarn(...args);\n      logs.push({\n        type: 'warn',\n        content: args.map(arg => formatOutput(arg)).join(' ')\n      });\n    };\n    console.error = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      originalError(...args);\n      logs.push({\n        type: 'error',\n        content: args.map(arg => formatOutput(arg)).join(' ')\n      });\n    };\n    try {\n      // Execute the code\n      // eslint-disable-next-line no-new-func\n      const result = new Function(code)();\n\n      // If the code returns a value, show it\n      if (result !== undefined) {\n        logs.push({\n          type: 'result',\n          content: formatOutput(result)\n        });\n      }\n      setOutput(logs);\n    } catch (error) {\n      setOutput([...logs, {\n        type: 'error',\n        content: error.toString()\n      }]);\n    } finally {\n      // Restore original console methods\n      console.log = originalLog;\n      console.warn = originalWarn;\n      console.error = originalError;\n      setIsRunning(false);\n    }\n  };\n\n  // Format different types of output\n  const formatOutput = value => {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'object') {\n      try {\n        return JSON.stringify(value, null, 2);\n      } catch (error) {\n        return value.toString();\n      }\n    }\n    return value.toString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-6 border border-gray-300 rounded-md overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-100 p-2 border-b border-gray-300 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-mono text-sm\",\n        children: \"JavaScript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runCode,\n        disabled: isRunning,\n        className: `px-3 py-1 rounded text-white text-sm ${isRunning ? 'bg-gray-500' : 'bg-green-600 hover:bg-green-700'}`,\n        children: isRunning ? 'Running...' : 'Run'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: code,\n      onChange: e => setCode(e.target.value),\n      className: \"w-full h-48 p-4 font-mono text-sm outline-none resize-none bg-gray-900 text-gray-200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-black text-white p-4 font-mono text-sm max-h-48 overflow-y-auto\",\n      children: [output.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"// Output will appear here after running the code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this) : output.map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `whitespace-pre-wrap mb-1 ${line.type === 'error' ? 'text-red-400' : line.type === 'warn' ? 'text-yellow-400' : line.type === 'result' ? 'text-purple-400' : 'text-green-400'}`,\n        children: line.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: outputEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveCode, \"tehPUdSN6iK8VpoHgnbR3LEvSnI=\");\n_c = LiveCode;\nexport default LiveCode;\nvar _c;\n$RefreshReg$(_c, \"LiveCode\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","LiveCode","_ref","_s","initialCode","code","setCode","output","setOutput","isRunning","setIsRunning","outputEndRef","current","scrollIntoView","behavior","runCode","originalLog","console","log","originalWarn","warn","originalError","error","logs","_len","arguments","length","args","Array","_key","push","type","content","map","arg","formatOutput","join","_len2","_key2","_len3","_key3","result","Function","undefined","toString","value","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onChange","e","target","line","index","ref","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/Career/Website/src/components/blog/LiveCode.js"],"sourcesContent":["// src/components/blog/LiveCode.js\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst LiveCode = ({ initialCode }) => {\n  const [code, setCode] = useState(initialCode || '// Write your code here');\n  const [output, setOutput] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const outputEndRef = useRef(null);\n\n  // Scroll to bottom of output whenever new content is added\n  useEffect(() => {\n    if (outputEndRef.current) {\n      outputEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [output]);\n\n  // Override console.log to capture output\n  const runCode = () => {\n    setIsRunning(true);\n    setOutput([]);\n    \n    // Save the original console methods\n    const originalLog = console.log;\n    const originalWarn = console.warn;\n    const originalError = console.error;\n\n    // Override console methods to capture output\n    const logs = [];\n    console.log = (...args) => {\n      originalLog(...args);\n      logs.push({ type: 'log', content: args.map(arg => formatOutput(arg)).join(' ') });\n    };\n    console.warn = (...args) => {\n      originalWarn(...args);\n      logs.push({ type: 'warn', content: args.map(arg => formatOutput(arg)).join(' ') });\n    };\n    console.error = (...args) => {\n      originalError(...args);\n      logs.push({ type: 'error', content: args.map(arg => formatOutput(arg)).join(' ') });\n    };\n\n    try {\n      // Execute the code\n      // eslint-disable-next-line no-new-func\n      const result = new Function(code)();\n      \n      // If the code returns a value, show it\n      if (result !== undefined) {\n        logs.push({ type: 'result', content: formatOutput(result) });\n      }\n      \n      setOutput(logs);\n    } catch (error) {\n      setOutput([...logs, { type: 'error', content: error.toString() }]);\n    } finally {\n      // Restore original console methods\n      console.log = originalLog;\n      console.warn = originalWarn;\n      console.error = originalError;\n      setIsRunning(false);\n    }\n  };\n\n  // Format different types of output\n  const formatOutput = (value) => {\n    if (value === null) return 'null';\n    if (value === undefined) return 'undefined';\n    if (typeof value === 'object') {\n      try {\n        return JSON.stringify(value, null, 2);\n      } catch (error) {\n        return value.toString();\n      }\n    }\n    return value.toString();\n  };\n\n  return (\n    <div className=\"my-6 border border-gray-300 rounded-md overflow-hidden\">\n      {/* Code editor */}\n      <div className=\"bg-gray-100 p-2 border-b border-gray-300 flex justify-between items-center\">\n        <span className=\"font-mono text-sm\">JavaScript</span>\n        <button\n          onClick={runCode}\n          disabled={isRunning}\n          className={`px-3 py-1 rounded text-white text-sm ${\n            isRunning ? 'bg-gray-500' : 'bg-green-600 hover:bg-green-700'\n          }`}\n        >\n          {isRunning ? 'Running...' : 'Run'}\n        </button>\n      </div>\n      <textarea\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        className=\"w-full h-48 p-4 font-mono text-sm outline-none resize-none bg-gray-900 text-gray-200\"\n      />\n\n      {/* Output console */}\n      <div className=\"bg-black text-white p-4 font-mono text-sm max-h-48 overflow-y-auto\">\n        {output.length === 0 ? (\n          <div className=\"text-gray-500\">// Output will appear here after running the code</div>\n        ) : (\n          output.map((line, index) => (\n            <div \n              key={index} \n              className={`whitespace-pre-wrap mb-1 ${\n                line.type === 'error' \n                  ? 'text-red-400' \n                  : line.type === 'warn' \n                    ? 'text-yellow-400' \n                    : line.type === 'result' \n                      ? 'text-purple-400' \n                      : 'text-green-400'\n              }`}\n            >\n              {line.content}\n            </div>\n          ))\n        )}\n        <div ref={outputEndRef} />\n      </div>\n    </div>\n  );\n};\n\nexport default LiveCode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}