{"ast":null,"code":"const post = {\n  id: \"openFOI\",\n  title: \"OpenFOI: Freedom of Information Made Easy\",\n  publication: \"Portfolio, 2025\",\n  date: \"2025-05-28\",\n  summary: \"An AI-powered platform for managing Freedom of Information requests.\",\n  video: \"/videos/OpenFOI.mp4\",\n  content: `\n\n## OpenFOI\n\nFreedom of Information (FOI) requests are a mainstay of British institutions.\nFreedom of Information (FOI) requests are vital for transparency and accountability — yet responding to them remains manually intensive and error-prone. OpenFOI is a streamlined, AI-powered tool for managing FOI workflows end-to-end. Built for journalists, public officials, and civil society organizations, it simplifies response drafting, redaction, export, and request tracking — all in a single interface.\n\n### Features\n\n- GPT-powered response drafting with integrated FOI exemptions  \n- Manual and rule-based redaction with exemption tagging  \n- Blackout-style redacted PDF + styled DOCX export  \n- CSV upload for batch request ingestion  \n- Request tracker with metadata, reference numbers, and response history  \n- Session-based state saving for seamless navigation  \n- Customisable exemptions system compliant with UK FOI Act 2000\n\n### Technologies Used\n\n- **Streamlit** – lightweight frontend for rapid UI development  \n- **Python** – core backend logic and redaction tools  \n- **OpenAI GPT-4** – for AI-assisted response generation and suggestions  \n- **spaCy** – optionally used for named entity recognition (NER)  \n- **FPDF + python-docx** – for redacted PDF and styled DOCX exports  \n- **Git LFS** – for storing large media assets (e.g. video walkthroughs)\n\n### Reflections\n\nTony Blair announced that _one of his biggest regrests from government was pushing through the FOI Act (cite) - apparently it leads to a risk-averse culture in the civil service. \nAs someone who _believes the civil service should encourage risk taking and increase the risk tolerance of its civil servants (cite), maybe better work should go into trying to reverse the FOI Act instead of making it easier.\nAs you may imagine, it is a relatively nebulous question as to how much FOI requests costs the central government each year. Estimates \nfrom 2010 state that central government expends £24.4 million per year solely on FOI, with local governments  £11.1 million. (cite)\n\nOpenFOI was built to explore how small civic tools can harness AI responsibly in high-stakes, bureaucratic domains. Working on it strengthened my understanding of document workflows, sensitive redaction logic, and user-centric design in the public sector. It’s a simple, extensible base for bringing machine learning to government transparency.\n\n---\n\n#### Footnotes\nCitation for FOI cost: https://www.ucl.ac.uk/constitution-unit/sites/constitution-unit/files/cost-of-foi.pdf \n\n`\n};\nexport default post;","map":{"version":3,"names":["post","id","title","publication","date","summary","video","content"],"sources":["/Users/mac/Documents/Career/Website/src/data/portfolio/openFOI.js"],"sourcesContent":["const post = {\n  id: \"openFOI\",\n  title: \"OpenFOI: Freedom of Information Made Easy\",\n  publication: \"Portfolio, 2025\",\n  date: \"2025-05-28\",\n  summary: \"An AI-powered platform for managing Freedom of Information requests.\",\n  video: \"/videos/OpenFOI.mp4\",\n  content: `\n\n## OpenFOI\n\nFreedom of Information (FOI) requests are a mainstay of British institutions.\nFreedom of Information (FOI) requests are vital for transparency and accountability — yet responding to them remains manually intensive and error-prone. OpenFOI is a streamlined, AI-powered tool for managing FOI workflows end-to-end. Built for journalists, public officials, and civil society organizations, it simplifies response drafting, redaction, export, and request tracking — all in a single interface.\n\n### Features\n\n- GPT-powered response drafting with integrated FOI exemptions  \n- Manual and rule-based redaction with exemption tagging  \n- Blackout-style redacted PDF + styled DOCX export  \n- CSV upload for batch request ingestion  \n- Request tracker with metadata, reference numbers, and response history  \n- Session-based state saving for seamless navigation  \n- Customisable exemptions system compliant with UK FOI Act 2000\n\n### Technologies Used\n\n- **Streamlit** – lightweight frontend for rapid UI development  \n- **Python** – core backend logic and redaction tools  \n- **OpenAI GPT-4** – for AI-assisted response generation and suggestions  \n- **spaCy** – optionally used for named entity recognition (NER)  \n- **FPDF + python-docx** – for redacted PDF and styled DOCX exports  \n- **Git LFS** – for storing large media assets (e.g. video walkthroughs)\n\n### Reflections\n\nTony Blair announced that _one of his biggest regrests from government was pushing through the FOI Act (cite) - apparently it leads to a risk-averse culture in the civil service. \nAs someone who _believes the civil service should encourage risk taking and increase the risk tolerance of its civil servants (cite), maybe better work should go into trying to reverse the FOI Act instead of making it easier.\nAs you may imagine, it is a relatively nebulous question as to how much FOI requests costs the central government each year. Estimates \nfrom 2010 state that central government expends £24.4 million per year solely on FOI, with local governments  £11.1 million. (cite)\n\nOpenFOI was built to explore how small civic tools can harness AI responsibly in high-stakes, bureaucratic domains. Working on it strengthened my understanding of document workflows, sensitive redaction logic, and user-centric design in the public sector. It’s a simple, extensible base for bringing machine learning to government transparency.\n\n---\n\n#### Footnotes\nCitation for FOI cost: https://www.ucl.ac.uk/constitution-unit/sites/constitution-unit/files/cost-of-foi.pdf \n\n`\n};\n\nexport default post;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG;EACXC,EAAE,EAAE,SAAS;EACbC,KAAK,EAAE,2CAA2C;EAClDC,WAAW,EAAE,iBAAiB;EAC9BC,IAAI,EAAE,YAAY;EAClBC,OAAO,EAAE,sEAAsE;EAC/EC,KAAK,EAAE,qBAAqB;EAC5BC,OAAO,EAAE;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAeP,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}